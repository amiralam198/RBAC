{"ast":null,"code":"const handleSignUp = async e => {\n  e.preventDefault();\n  setError(null); // Reset error state\n\n  // Creating user data object\n  const userData = {\n    name: `${firstName} ${lastName}`,\n    // Combine first and last name\n    email,\n    password,\n    gender,\n    age: age.toString() // Ensure age is sent as a string\n  };\n  try {\n    const response = await fetch(\"https://role-based-backend-gamma.vercel.app/api/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    const data = await response.json();\n    if (response.ok) {\n      alert(\"Signup successful! Redirecting to login...\");\n      navigate(\"/login\"); // Redirect to login page on success\n    } else {\n      setError(data.message || \"Signup failed. Please try again.\");\n    }\n  } catch (error) {\n    setError(\"Something went wrong. Please try again.\");\n    console.error(\"Signup error:\", error);\n  }\n};","map":{"version":3,"names":["handleSignUp","e","preventDefault","setError","userData","name","firstName","lastName","email","password","gender","age","toString","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","navigate","message","error","console"],"sources":["/Users/amiralam/Downloads/Amir-main/src/component/SignUp1.js"],"sourcesContent":["const handleSignUp = async (e) => {\r\n  e.preventDefault();\r\n  setError(null); // Reset error state\r\n\r\n  // Creating user data object\r\n  const userData = {\r\n    name: `${firstName} ${lastName}`, // Combine first and last name\r\n    email,\r\n    password,\r\n    gender,\r\n    age: age.toString(), // Ensure age is sent as a string\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(\"https://role-based-backend-gamma.vercel.app/api/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      alert(\"Signup successful! Redirecting to login...\");\r\n      navigate(\"/login\"); // Redirect to login page on success\r\n    } else {\r\n      setError(data.message || \"Signup failed. Please try again.\");\r\n    }\r\n  } catch (error) {\r\n    setError(\"Something went wrong. Please try again.\");\r\n    console.error(\"Signup error:\", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhB;EACA,MAAMC,QAAQ,GAAG;IACfC,IAAI,EAAE,GAAGC,SAAS,IAAIC,QAAQ,EAAE;IAAE;IAClCC,KAAK;IACLC,QAAQ;IACRC,MAAM;IACNC,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAE;EACvB,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAA6D,EAAE;MAC1FC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMgB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACfC,KAAK,CAAC,4CAA4C,CAAC;MACnDC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLrB,QAAQ,CAACiB,IAAI,CAACK,OAAO,IAAI,kCAAkC,CAAC;IAC9D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdvB,QAAQ,CAAC,yCAAyC,CAAC;IACnDwB,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;EACvC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}